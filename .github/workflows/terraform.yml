name: Terraform workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  terraform-check:
    name: Terraform Format Check
    runs-on: ubuntu-latest
    env:
      TF_VAR_terraform_state_s3_bucket_name: ${{ vars.TF_BACKEND_S3_BUCKET }}
      TF_VAR_aws_region: ${{ vars.AWS_REGION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3 
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_GITHUB_ACTIONS_ROLE_ARN }}
      - name: Generate Terraform backend config
        run: |
          echo "bucket=\"${{ vars.TF_BACKEND_S3_BUCKET }}\"" > backend.conf
          echo "key=\"${{ vars.TF_BACKEND_S3_BUCKET_KEY }}\"" >> backend.conf
          echo "region=\"${{ vars.AWS_REGION }}\"" >> backend.conf
      - name: Terraform Init
        run: terraform init -backend-config=backend.conf
      - name: Terraform Format Check
        run: terraform fmt -check

  terraform-plan:
    name: Terraform Plan
    needs: terraform-check
    runs-on: ubuntu-latest
    env:
      TF_VAR_terraform_state_s3_bucket_name: ${{ vars.TF_BACKEND_S3_BUCKET }}
      TF_VAR_aws_region: ${{ vars.AWS_REGION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3 
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_GITHUB_ACTIONS_ROLE_ARN }}
      - name: Generate Terraform backend config
        run: |
          echo "bucket=\"${{ vars.TF_BACKEND_S3_BUCKET }}\"" > backend.conf
          echo "key=\"${{ vars.TF_BACKEND_S3_BUCKET_KEY }}\"" >> backend.conf
          echo "region=\"${{ vars.AWS_REGION }}\"" >> backend.conf
      - name: Terraform Init
        run: terraform init -backend-config=backend.conf
      - name: Terraform Plan
        run: terraform plan -input=false

  terraform-apply:
    name: Terraform Apply
    needs: terraform-plan
    runs-on: ubuntu-latest
    env:
      TF_VAR_terraform_state_s3_bucket_name: ${{ vars.TF_BACKEND_S3_BUCKET }}
      TF_VAR_aws_region: ${{ vars.AWS_REGION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3 
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_GITHUB_ACTIONS_ROLE_ARN }}
      - name: Generate Terraform backend config
        run: |
          echo "bucket=\"${{ vars.TF_BACKEND_S3_BUCKET }}\"" > backend.conf
          echo "key=\"${{ vars.TF_BACKEND_S3_BUCKET_KEY }}\"" >> backend.conf
          echo "region=\"${{ vars.AWS_REGION }}\"" >> backend.conf
      - name: Terraform Init
        run: terraform init -backend-config=backend.conf
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
